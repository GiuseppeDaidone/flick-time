# Run maven build to create jar file with goals=package and profiles=pom.xml

# Build project image (as root user)
docker image build -t flick-time .

# If error try go to .docker/config.json and fix
"credsStore": "desktop" -> "credStore": "desktop"

# Build container for postgres (as non-root user)
docker-compose up --build

# Create docker container for postgres and run it
docker run -p 5432:5432 --name postgres -e POSTGRES_PASSWORD=postgres -d postgres:latest

# If port is blocked due to postgres running in background
sudo lsof -i :5432
sudo kill -9 <PID>

# Find ip address assigned to postgres container
docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' postgres

# Replace postgres ip address in application.properties
spring.datasource.url=jdbc:postgresql://<POSTGRES_IP>:5432/flicktime

# Run flick-time container replacing current postgres container's ip address
docker run -v /<CURRENT_PROJECT_PATH>/flick-time/src/main/resources/application.properties:/app-service/application.properties -d -p 8080:8080 --name flick-time flick-time:latest
